generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  firstName    String?  @db.VarChar(255)
  lastName     String?  @db.VarChar(255)
  email        String?  @unique @db.VarChar(255)
  password     String?  @db.VarChar(255)
  refreshToken String?  @db.VarChar(255)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
}

model Schema {
  id              Int               @id @default(autoincrement())
  code            Int               @unique
  isin            Int               @unique
  name            String            @db.VarChar(255)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now()) @updatedAt
  navs            NAV[]
  schema_category Schema_Category[]
}

model NAV {
  id               Int      @id @default(autoincrement())
  isin             Int
  nav              Float
  date             DateTime
  repurchase_price Int
  sale_price       Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now()) @updatedAt
  isin_code        Schema   @relation(fields: [isin], references: [isin])
}

model Return_Type {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  schema_category Schema_Category[]
}

model Plan_type {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  schema_category Schema_Category[]
}

model Schema_Category {
  id             Int         @id @default(autoincrement())
  code           Int
  return_type    Int
  plan_type      Int
  schema_code    Schema      @relation(fields: [code], references: [code])
  return_type_id Return_Type @relation(fields: [return_type], references: [id])
  plan_type_id   Plan_type   @relation(fields: [plan_type], references: [id])
}
