generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  firstName    String?  @db.VarChar(255)
  lastName     String?  @db.VarChar(255)
  email        String?  @unique @db.VarChar(255)
  password     String?  @db.VarChar(255)
  refreshToken String?  @db.VarChar(255)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
}

model Scheme {
  id        Int      @id @default(autoincrement())
  code      Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isin      ISIN[]
}

model ISIN {
  id             Int         @id @default(autoincrement())
  isin           String      @unique
  name           String
  plan_type      Int
  return_type    Int
  scheme_id      Int
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @default(now()) @updatedAt
  scheme_code    Scheme      @relation(fields: [scheme_id], references: [code])
  plan_type_id   Plan_type   @relation(fields: [plan_type], references: [id])
  return_type_id Return_type @relation(fields: [return_type], references: [id])
  nav            NAV[]
}

model NAV {
  id               Int      @id @default(autoincrement())
  isin             String
  nav              Float
  date             DateTime @db.Date
  repurchase_price Int      @default(0)
  sale_price       Int      @default(0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now()) @updatedAt
  isin_id          ISIN     @relation(fields: [isin], references: [isin])

  @@unique([isin, date])
}

model Return_type {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isin_id   ISIN[]
}

model Plan_type {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isin_id   ISIN[]
}

model Date_scrapped {
  id        Int      @id @default(autoincrement())
  date      DateTime @unique @db.Date
  status    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
